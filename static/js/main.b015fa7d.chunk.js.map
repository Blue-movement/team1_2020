{"version":3,"sources":["components/feed/cardGridTwitter.js","components/feed/cardGridInstagram.js","components/feed/cardGridNews.js","components/feed/cardGridReddit.js","theme.js","components/feed/feed.js","components/uplift.js","components/protest.js","components/action.js","components/404.js","components/navbar.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["CardGridTwitter","data","this","props","grid","map","tweet","index","Grid","item","xs","key","style","marginBottom","display","Card","justifyContent","flexDirection","CardHeader","avatar","Avatar","src","user","profile_image_url","title","name","subheader","created_at","substring","onClick","window","open","screen_name","Divider","variant","CardContent","Typography","text","CardActions","Button","id_str","endIcon","container","spacing","Component","CardGridInstagram","state","fetching","fetches","forEach","post","push","fetch","node","owner","id","then","res","json","Promise","all","values","user_info","setState","concat","curData","Object","assign","catch","error","console","log","length","profile_pic_url","username","Date","taken_at_timestamp","toLocaleString","CardMedia","height","width","image","display_url","edge_media_to_caption","edges","shortcode","Container","maxWidth","padding","LinearProgress","marginTop","CardGridNews","article","publishedAt","url","urlToImage","description","source","CardGridReddit","author","created_utc","permalink","Box","justifyItems","score","palette","primary","main","contrastText","secondary","themeName","makeComponentFromTheme","newComponent","newPalette","newThemeName","ThemeProvider","theme","createMuiTheme","snoowrap","require","Feed","isLoading","twitterPosts","nextTwitterResultUrl","instagramPosts","nextInstagramResultUrl","newsPosts","newsPage","redditPosts","visiblePosts","searchTwitter","searchInstagram","searchNews","getReddit","load","setInterval","instagram","twitter","news","reddit","clearInterval","query","proxyurl","toString","headers","Authorization","response","ok","statuses","search_metadata","next_results","prevState","splice","graphql","hashtag","edge_hashtag_to_media","page_info","end_cursor","articles","userAgent","navigator","clientId","process","clientSecret","refreshToken","getSubreddit","getHot","posts","newPosts","loadMoreTwitter","loadMoreInstagram","BLMLoader","color","LoadMoreSocialMediaButton","loadMorePosts","generateLoadMoreButton","loadFunction","IconButton","LoadMoreTwitterButton","LoadMoreInstagramButton","LoadMoreNewsButton","loadMoreNews","LoadMoreRedditButton","loadMoreReddit","textAlign","href","target","rel","Uplift","Protest","Action","NotFound","flexGrow","AppBar","position","Toolbar","ListItem","to","textDecoration","alt","ListItemText","paddingLeft","List","inset","About","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b015fa7d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, Divider, Grid, Typography } from '@material-ui/core'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\n\r\nexport class CardGridTwitter extends Component {\r\n\r\n  render() {\r\n    const { data } = this.props\r\n    const grid = data ? data.map((tweet, index) =>  \r\n      <Grid item xs={3} key={index} style={{marginBottom: 30, display: 'flex'}}>\r\n        <Card style={{display: 'inline-flex', justifyContent: 'space-between', flexDirection: 'column'}}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar src={tweet.user.profile_image_url} />\r\n            }\r\n            title={tweet.user.name}\r\n            subheader={tweet.created_at.substring(0, 20)}\r\n            onClick={() => window.open('https://www.twitter.com/'+ tweet.user.screen_name, '_blank')}\r\n          />\r\n\r\n          <Divider variant=\"middle\"/>\r\n\r\n          <CardContent>\r\n            <Typography variant=\"body1\">\r\n              {tweet.text}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          <Divider variant=\"middle\"  />\r\n\r\n          <CardActions style={{justifyContent: 'center'}}>\r\n            {/* https://material-ui.com/components/material-icons/ */}\r\n            <Button onClick={() => window.open('https://www.twitter.com/'+ tweet.user.screen_name + '/status/' + tweet.id_str, '_blank')} endIcon={<OpenInNewIcon />}>        \r\n              Twitter\r\n            </Button>         \r\n          </CardActions>\r\n        </Card>\r\n      </Grid>) : null\r\n\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {grid}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default CardGridTwitter\r\n","import React, { Component } from 'react'\r\nimport { Avatar, Container, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Divider, LinearProgress, Grid, Typography } from '@material-ui/core'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\n\r\nclass CardGridInstagram extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      fetching: true,\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {data} = this.props\r\n    let fetches = []\r\n\r\n    const addUserData = user_info => {\r\n      data.forEach((post, index) => {\r\n        this.setState({\r\n          data: this.state.data.concat(post)\r\n        }, () => {\r\n          let curData = this.state.data\r\n          curData[index].node.owner = Object.assign({}, curData[index].node.owner, user_info[index].user)\r\n          this.setState({\r\n            data: curData\r\n          })\r\n        })\r\n      })\r\n      this.setState({fetching: false})\r\n    }\r\n\r\n    // Gets users' username, and profile pic url from a Python flask server\r\n    if (data) data.forEach((post) =>\r\n      fetches.push(\r\n        fetch(\"https://prince25.pythonanywhere.com/idtoname?id=\" + post.node.owner.id)\r\n          .then(res => res.json())\r\n      )\r\n    )\r\n\r\n    if (data) Promise.all(fetches).then((values) => addUserData(values)).catch((error) => console.log(\"Instgram getUserInfo() Failed:\", error))\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const grid = this.state.data && this.state.data.length > 0 ? this.state.data.map((post, index) =>\r\n      <Grid item xs={3} key={index} style={{marginBottom: 30, display: 'flex'}}>\r\n        <Card style={{display: 'inline-flex', justifyContent: 'space-between', flexDirection: 'column'}}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar src={post.node.owner.profile_pic_url} />\r\n            }\r\n            title={post.node.owner.username}\r\n            subheader={new Date(post.node.taken_at_timestamp).toLocaleString(\"en-US\")}\r\n            onClick={() => window.open('https://www.instagram.com/' + post.node.owner.username, '_blank')}\r\n          />\r\n\r\n          <CardMedia style={{height: '250px', width: '100%'}}\r\n            image={post.node.display_url}\r\n          />\r\n\r\n          <CardContent>\r\n            <Typography variant=\"body1\">\r\n              {post.node.edge_media_to_caption.edges[0] ? \r\n                post.node.edge_media_to_caption.edges[0].node.text.length > 150 ?  \r\n                  post.node.edge_media_to_caption.edges[0].node.text.substring(0, 150) + '...' : post.node.edge_media_to_caption.edges[0].node.text\r\n                : null}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          <Divider variant=\"middle\"/>\r\n\r\n          <CardActions style={{justifyContent: 'center'}}>\r\n            {/* https://material-ui.com/components/material-icons/ */}\r\n            <Button onClick={() => window.open('https://www.instagram.com/p/' + post.node.shortcode, '_blank')} endIcon={<OpenInNewIcon />}>        \r\n              Instagram\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>) : null\r\n    \r\n    return (\r\n      <div>\r\n        {!this.state.fetching ?\r\n          <Grid container spacing={3}>\r\n            {grid} \r\n          </Grid> : \r\n          <Container style={{width: '100vw', maxWidth: '1232px', padding: 0}}>\r\n            <LinearProgress style={{marginTop: 20, marginBottom: 20}} />\r\n          </Container> \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardGridInstagram\r\n","import React, { Component } from 'react'\r\nimport { Button, Card, CardActions, CardContent, CardHeader, CardMedia, Divider, Grid, Typography } from '@material-ui/core'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\n\r\nexport class CardGridNews extends Component {\r\n\r\n  render() {\r\n    const { data } = this.props\r\n    const grid = data ? data.map((article, index) =>  \r\n      <Grid item xs={3} key={index} style={{marginBottom: 30, display: 'flex'}}>\r\n        <Card style={{display: 'inline-flex', justifyContent: 'space-between', flexDirection: 'column'}}>\r\n          <CardHeader\r\n            title={<Typography variant=\"subtitle2\">{article.title}</Typography>}\r\n            subheader={<Typography variant=\"overline\">{article.publishedAt}</Typography>}\r\n            onClick={() => window.open(article.url, '_blank')}\r\n          />\r\n         \r\n          <CardMedia style={{height: '250px', width: '100%'}}\r\n            image={article.urlToImage ? article.urlToImage : 'https://blacklivesmatter.com/wp-content/themes/blm/dist/images/logo-black-lives-matter.png'}\r\n          />\r\n\r\n          <CardContent>\r\n            <Typography variant=\"body2\">\r\n              {article.description}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          <Divider variant=\"middle\"/>\r\n\r\n          <CardActions style={{justifyContent: 'center'}}>\r\n            {/* https://material-ui.com/components/material-icons/ */}\r\n            <Button onClick={() => window.open(article.url, '_blank')} endIcon={<OpenInNewIcon />}>        \r\n              {article.source.name}\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>) : null\r\n\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {grid}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default CardGridNews\r\n","import React, { Component } from 'react'\r\nimport { Box, Button, Card, CardActions, CardMedia, CardHeader, Divider, Grid, Typography } from '@material-ui/core'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\n\r\nexport class CardGridReddit extends Component {\r\n\r\n  render() {\r\n    const { data } = this.props\r\n    const grid = data ? data.map((post, index) =>  \r\n      <Grid item xs={3} key={index} style={{marginBottom: 30, display: 'flex'}}>\r\n        <Card style={{display: 'inline-flex', justifyContent: 'space-between', flexDirection: 'column', width: '100%'}}>\r\n          <CardHeader\r\n            title={<Typography variant=\"h6\">{post.title}</Typography>}\r\n            subheader={<Typography variant=\"caption\">by {post.author.name} on {post.created_utc}</Typography>}\r\n            onClick={() => window.open('https://www.reddit.com' + post.permalink, '_blank')}\r\n          />\r\n\r\n          {/* Screws up card height for posts that don't have pictures\r\n          {!post.url.includes('www.reddit.com') && !post.url.includes(\"v.redd.it\") ? \r\n            <CardMedia style={{height: '250px', width: '400px'}} image={post.url} /> : null \r\n          } \r\n          */}\r\n\r\n          <Divider variant=\"middle\"/>\r\n\r\n          <CardActions style={{justifyContent: 'center'}}>\r\n            {/* https://material-ui.com/components/material-icons/ */}\r\n            <Box style={{display: 'grid', justifyItems: 'center'}}>\r\n                <ThumbUpIcon /> \r\n                <Typography variant=\"caption\">{post.score} Upvotes</Typography>\r\n            </Box>\r\n            <Button onClick={() => window.open('https://www.reddit.com' + post.permalink, '_blank')} endIcon={<OpenInNewIcon />}>        \r\n              Reddit\r\n            </Button>\r\n          </CardActions>\r\n\r\n        </Card>\r\n      </Grid>) : null\r\n\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {grid}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default CardGridReddit\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// Generated from https://react-theming.github.io/create-mui-theme/\r\nvar palette = {\r\n  primary: { main: '#000000', contrastText: '#FFC107' },\r\n  secondary: { main: '#FFC107' }\r\n};\r\nvar themeName = 'BLM_Theme';\r\n\r\n\r\n// Applies the theme on the component passed in based on the palette provided\r\nexport default function makeComponentFromTheme (newComponent, newPalette=palette, newThemeName=themeName) {\r\n  palette = newPalette;\r\n  themeName = newThemeName;\r\n  return () => {\r\n    return (\r\n      <ThemeProvider theme={createMuiTheme({ palette, themeName })}>{newComponent}</ThemeProvider>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Box, Button, Container, Divider, IconButton, LinearProgress, Typography } from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport CardGridTwitter from './cardGridTwitter'\r\nimport CardGridInstagram from './cardGridInstagram'\r\nimport CardGridNews from './cardGridNews'\r\nimport CardGridReddit from './cardGridReddit'\r\nimport makeComponentFromTheme from '../../theme'\r\n\r\nconst snoowrap = require('snoowrap'); // Reddit Wrapper\r\nconst NUM_POSTS_PER_NETWORK = 4;\r\n\r\nexport class Feed extends Component {\r\n\r\n  // Constructor - Sets up initial states\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      twitterPosts: [],\r\n      nextTwitterResultUrl: null,\r\n      instagramPosts: [],\r\n      nextInstagramResultUrl: null,\r\n      newsPosts: [],\r\n      newsPage: 1,\r\n      redditPosts: [],\r\n      visiblePosts: {}\r\n    }\r\n  }\r\n\r\n\r\n  // Functions to run once component is mounted\r\n  componentDidMount() {\r\n    this.searchTwitter()\r\n    this.searchInstagram()\r\n    this.searchNews()\r\n    this.getReddit()\r\n\r\n    let load = setInterval(() => {\r\n      if (this.state.visiblePosts.instagram && this.state.visiblePosts.twitter && this.state.visiblePosts.news && this.state.visiblePosts.reddit) {\r\n        this.setState({isLoading: false})\r\n        clearInterval(load)\r\n      }\r\n    }, 100)\r\n      \r\n  }\r\n\r\n\r\n  // Queries Twitter API\r\n  // https://developer.twitter.com/en/docs/tweets/search/api-reference/get-search-tweets\r\n  searchTwitter(query='BLM OR \"Black Lives Matter\"') {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141\r\n    let url = this.state.nextTwitterResultUrl ? \r\n    'https://api.twitter.com/1.1/search/tweets.json' + this.state.nextTwitterResultUrl : \r\n    'https://api.twitter.com/1.1/search/tweets.json?q=' + query + '&lang=en&result_type=mixed&include_entities=1&count=' + (NUM_POSTS_PER_NETWORK * 3).toString()\r\n\r\n    fetch(proxyurl + url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + process.env.REACT_APP_TWITTER_BEARER_TOKEN,\r\n      }})\r\n      .then(response => {\r\n        if (response.ok) return response.json()\r\n        else {\r\n          console.log(\"Twitter request failed: \" + url)\r\n          return {statuses: this.state.twitterPosts, search_metadata: {next_results: this.state.nextTwitterResultUrl}}\r\n        }\r\n      })\r\n      .then(data => this.setState(prevState => {\r\n        return { \r\n          twitterPosts: [...prevState.twitterPosts, ...data.statuses],\r\n          nextTwitterResultUrl: data.search_metadata.next_results \r\n        }}, () => {\r\n          let curData = this.state.visiblePosts\r\n          curData.twitter = this.state.twitterPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n          this.setState({visiblePosts: curData})\r\n      }))\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // Queries Instagram using Hashtag\r\n  // https://medium.com/@h4t0n/instagram-data-scraping-550c5f2fb6f1\r\n  searchInstagram(query='blacklivesmatter') {\r\n    let url = this.state.nextInstagramResultUrl ? \r\n    'https://www.instagram.com/explore/tags/' + query + '/?__a=1&max_id=' + this.state.nextInstagramResultUrl : \r\n    'https://www.instagram.com/explore/tags/' + query + '/?__a=1'\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        if (response.ok) return response.json()\r\n        else {\r\n          console.log(\"Instagram request failed: \" + url)\r\n          return {graphql: {hashtag: {edge_hashtag_to_media: {edges: this.state.instagramPosts, page_info: {end_cursor: this.state.nextInstagramResultUrl}}}}}\r\n        }\r\n      })\r\n      .then(data => this.setState(prevState => {\r\n        return { \r\n          instagramPosts: [...prevState.instagramPosts, ...data.graphql.hashtag.edge_hashtag_to_media.edges],\r\n          nextInstagramResultUrl: data.graphql.hashtag.edge_hashtag_to_media.page_info.end_cursor \r\n        }}, () => {\r\n          let curData = this.state.visiblePosts\r\n          curData.instagram = this.state.instagramPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n          this.setState({visiblePosts: curData})\r\n      }))\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  \r\n  // Queries News API\r\n  // https://newsapi.org/docs/endpoints/everything\r\n  searchNews(query=\"BlackLivesMatter\") {\r\n    const url = \"https://newsapi.org/v2/everything?q=\" + query + \"&language=en&excludeDomains=adafruit.com&sortBy=publishedAt&pageSize=\" + (NUM_POSTS_PER_NETWORK * 3).toString() +\r\n      \"&page=\" + this.state.newsPage.toString() + \"&apiKey=\" + process.env.REACT_APP_NEWS_API_KEY\r\n    \r\n    // Since News API only allows localhost CORS for free, use a proxy\r\n    if (process.env.NODE_ENV == \"production\") \r\n      url = \"https://prince25.pythonanywhere.com/news?q=\" + query + \"&s=\" + (NUM_POSTS_PER_NETWORK * 3).toString() + \"&p=\" + this.state.newsPage.toString() + \r\n        \"&k=\" + process.env.REACT_APP_NEWS_API_KEY\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        if (response.ok) return response.json()\r\n        else {\r\n          console.log(\"News request failed: \" + url)\r\n          return {articles: this.state.newsPosts}\r\n        }\r\n      })\r\n      .then(data => this.setState(prevState => {\r\n        return {\r\n          newsPosts: [...prevState.newsPosts, ...data.articles],\r\n          newsPage: prevState.newsPage++\r\n        }}, () => {\r\n          let curData = this.state.visiblePosts\r\n          curData.news = this.state.newsPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n          this.setState({visiblePosts: curData})\r\n      }))\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // Uses Rediit API wrapper to get hottest posts from BlackLivesMatter subreddit\r\n  // https://github.com/not-an-aardvark/snoowrap\r\n  getReddit() {\r\n    const r = new snoowrap({\r\n      userAgent: navigator.userAgent,\r\n      clientId: process.env.REACT_APP_REDDIT_CLIENT_ID,\r\n      clientSecret: process.env.REACT_APP_REDDIT_CLIENT_SECRET,\r\n      refreshToken: process.env.REACT_APP_REDDIT_REFRESH_TOKEN\r\n    });\r\n\r\n    r.getSubreddit('BlackLivesMatter').getHot().then(\r\n      posts => this.setState({redditPosts: posts}, () => {\r\n        let curData = this.state.visiblePosts\r\n        curData.reddit = this.state.redditPosts.length >= NUM_POSTS_PER_NETWORK ? this.state.redditPosts.splice(0, NUM_POSTS_PER_NETWORK) : this.state.redditPosts\r\n        this.setState({visiblePosts: curData})\r\n      })\r\n    ).catch(error => console.log('Reddit wrapper error occured: ', error))\r\n  }\r\n\r\n\r\n  // Fetches more Twitter posts if we don't have enough in stock\r\n  loadMoreTwitter() {\r\n    if (this.state.twitterPosts.length < NUM_POSTS_PER_NETWORK)\r\n      this.searchTwitter()\r\n    else {\r\n      let curData = this.state.visiblePosts\r\n      curData.twitter = this.state.twitterPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n      this.setState({isLoading: true}, () => this.setState({\r\n        visiblePosts: curData, \r\n        isLoading: false\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\n  // Fetches more Instagram posts if we don't have enough in stock\r\n  loadMoreInstagram() {\r\n    if (this.state.instagramPosts.length < NUM_POSTS_PER_NETWORK)\r\n      this.searchInstagram()\r\n    else {\r\n      let curData = this.state.visiblePosts\r\n      curData.instagram = this.state.instagramPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n      this.setState({isLoading: true}, () => this.setState({\r\n        visiblePosts: curData, \r\n        isLoading: false\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\n  // Fetches more news articles if we don't have enough in stock\r\n  loadMoreNews() {\r\n    if (this.state.newsPosts.length < NUM_POSTS_PER_NETWORK)\r\n      this.searchNews()\r\n    else {\r\n      let curData = this.state.visiblePosts\r\n      curData.news = this.state.newsPosts.splice(0, NUM_POSTS_PER_NETWORK)\r\n      this.setState({isLoading: true}, () => this.setState({\r\n        visiblePosts: curData, \r\n        isLoading: false\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\n  // Appends NUM_POSTS_PER_NETWORK more posts to visiblePosts.reddit\r\n  loadMoreReddit() {\r\n    let newPosts = this.state.redditPosts.length >= NUM_POSTS_PER_NETWORK ? this.state.redditPosts.splice(0, NUM_POSTS_PER_NETWORK) : this.state.redditPosts.splice(0, this.state.redditPosts.length)\r\n    let curData = this.state.visiblePosts\r\n    curData.reddit = newPosts\r\n    this.setState({isLoading: true}, () => this.setState({\r\n      visiblePosts: curData,\r\n      isLoading: false\r\n    }))\r\n  }\r\n\r\n\r\n  // Loads more posts when \"Load More\" button is pressed\r\n  loadMorePosts() {\r\n    this.loadMoreTwitter()    // Load Twitter\r\n    this.loadMoreInstagram()  // Load Instagram\r\n  }\r\n\r\n  \r\n  render() {\r\n    const BLMLoader = makeComponentFromTheme(<LinearProgress color=\"secondary\" style={{marginTop: 20, marginBottom: 20}} />)\r\n    const LoadMoreSocialMediaButton = makeComponentFromTheme(<Button variant=\"outlined\" color=\"secondary\" onClick={() => this.loadMorePosts()}>Load More Social Media</Button>)\r\n    const generateLoadMoreButton = loadFunction => makeComponentFromTheme(\r\n      <IconButton color=\"secondary\" onClick={loadFunction}>\r\n        <NavigateNextIcon />\r\n      </IconButton>\r\n      )\r\n    const LoadMoreTwitterButton = generateLoadMoreButton(() => this.loadMoreTwitter())\r\n    const LoadMoreInstagramButton = generateLoadMoreButton(() => this.loadMoreInstagram())\r\n    const LoadMoreNewsButton = generateLoadMoreButton(() => this.loadMoreNews())\r\n    const LoadMoreRedditButton = generateLoadMoreButton(() => this.loadMoreReddit())\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h4\" style={{textAlign: 'center', marginTop: 40, marginBottom: 20}}>Latest BLM News</Typography>\r\n        {!this.state.isLoading && this.state.visiblePosts.news && this.state.visiblePosts.news.length > 0 ?\r\n          <Box style={{display: 'flex'}}>\r\n            <CardGridNews data={this.state.visiblePosts.news} />\r\n            <LoadMoreNewsButton />\r\n          </Box> : <BLMLoader />}\r\n\r\n        <Divider style= {{marginTop: 40, marginBottom: 40}} variant=\"middle\"/>\r\n\r\n        <Typography variant=\"h4\" style={{textAlign: 'center'}}>Top Reddit Posts</Typography>\r\n        <Typography variant=\"subtitle1\" style={{textAlign: 'center', marginBottom: 20}}>\r\n          From the <a href='https://www.reddit.com/r/BlackLivesMatter/' target=\"_blank\" rel=\"noopener noreferrer\">BlackLivesMatter</a> Subreddit\r\n        </Typography>\r\n        {!this.state.isLoading && this.state.visiblePosts.reddit && this.state.visiblePosts.reddit.length > 0 ?\r\n          <Box style={{display: 'flex'}}>\r\n            <CardGridReddit data={this.state.visiblePosts.reddit} /> \r\n            {this.state.redditPosts && this.state.redditPosts.length > 0 ? <LoadMoreRedditButton /> : null}\r\n          </Box> : <BLMLoader />}\r\n\r\n        <Divider style= {{marginTop: 40, marginBottom: 40}} variant=\"middle\"/>\r\n\r\n        <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: 40}}>Latest Social Media Posts</Typography>\r\n        {!this.state.isLoading && this.state.visiblePosts.twitter && this.state.visiblePosts.twitter.length > 0 ?\r\n          <Box style={{display: 'flex'}}>\r\n            <CardGridTwitter data={this.state.visiblePosts.twitter} /> \r\n            <LoadMoreTwitterButton />\r\n          </Box> : <BLMLoader />}\r\n        \r\n        {!this.state.isLoading && this.state.visiblePosts.instagram && this.state.visiblePosts.instagram.length > 0 ?\r\n          <Box style={{display: 'flex'}}>\r\n            <CardGridInstagram data={this.state.visiblePosts.instagram} /> \r\n            <LoadMoreInstagramButton />\r\n          </Box> : <BLMLoader />}\r\n\r\n        <Box style={{display: 'grid', justifyContent: 'center', marginBottom: '50px'}}>\r\n          <LoadMoreSocialMediaButton />\r\n        </Box>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Feed\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Uplift extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Uplift Page</h1>\r\n          Black people talking about and black people achievements: Ideas, businesses, apps, etc. <br/>\r\n          Encourage positivity within the black community <br/>\r\n          Can also sign up for positive affirmations to be sent to you(chat bot or texting platform)? <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Uplift\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Protest extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Protest Page</h1>\r\n          App or chat bot or website <br/>\r\n          Text/input locations and return nearby protests <br/>\r\n          Could also offer advice on keeping safe  <br/>\r\n          And maybe text you live updates <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Protest\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Action extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Action Page</h1>\r\n          Citizens dashboard that allows users to see all their representatives, budgets, pending legislation at the national, state, county and city level <br/>\r\n          Users will be able to see the funding for programs <br/>\r\n          Users will be able to contact their representatives easily <br/>\r\n          Users will be able to see polling locations for primaries, general elections and run-offs <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Action\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>Page not found :(</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppBar, Avatar, Toolbar, Typography }  from '@material-ui/core'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport makeComponentFromTheme from '../theme'\r\n\r\n\r\nconst NavBar = () => {\r\n  return(\r\n    <div style={{flexGrow: '1'}}>\r\n      <AppBar color=\"primary\" position=\"static\">\r\n        <Toolbar>\r\n          <ListItem>\r\n            <Link to=\"/about\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n              <Avatar alt=\"About\" color='red' src=\"img/navbar_logo.png\" />\r\n            </Link>\r\n            \r\n            <ListItemText style={{paddingLeft: '20px' }}>\r\n              <Typography color=\"inherit\" variant=\"button\">\r\n                <Link to=\"/about\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                  Black Lives Matter\r\n                </Link>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n          \r\n          <List>\r\n            <ListItem>\r\n              <ListItemText>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/feed\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Feed\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/action\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Action\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/protest\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Protest\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Uplift\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>                \r\n            </ListItem>\r\n          </List>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default makeComponentFromTheme(NavBar());","import React from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1 style={{textAlign: 'center'}}>About Page</h1>\r\n        // TODO\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Feed from './components/feed/feed'\r\nimport Uplift from './components/uplift'\r\nimport Protest from './components/protest'\r\nimport Action from './components/action'\r\nimport NotFound from './components/404'\r\nimport Navbar from './components/navbar'\r\nimport About from './components/about'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/'     component={Uplift} />\r\n        <Route path='/action'     component={Action} />\r\n        <Route path='/protest'    component={Protest} />\r\n        <Route path='/feed'       component={Feed} />\r\n        <Route path='/about'      component={About} />\r\n        <Route                    component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}